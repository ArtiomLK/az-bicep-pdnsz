on:
  workflow_dispatch: {}
  push:
    paths-ignore:
      - '**.md'
env:
  ACR_MODULE_N: pdnsz
  RG_N: rg-azure-bicep-pdnsz

name: DEV - Deploy Azure Resource
jobs:
  deploy_to_dev:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      # Checkout code
    - uses: actions/checkout@v2

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    #   # Test Azure Resource Deployment without pdnsz vnet-link
    # - uses: ./.github/actions/deploy-az-resource
    #   with:
    #     az_rg_n: ${{ env.RG_N }}
    #     template_path: examples/examples-wo-pdnsz-vnet-link.bicep

    # DELETE all resources inside the RG
    - run: |
        resources="$(az resource list --subscription ${{ secrets.SUB_ID }} --resource-group ${{ env.RG_N }} | grep id | awk -F \" '{print $4}')"
        echo echo $resources
        for id in $resources; do
          az resource delete --subscription ${{ secrets.SUB_ID }} --resource-group ${{ env.RG_N }} --ids "$id" --no-wait --verbose
        done
      #  az resource list --subscription ${{ secrets.SUB_ID }} --resource-group ${{ env.RG_N }} --query "[].id" -o tsv | xargs -I X -n 1 az resource delete --ids X --no-wait
      #  az resource list --subscription ${{ secrets.SUB_ID }} --resource-group ${{ env.RG_N }} --query "[].id" -o tsv | xargs -n 1 az resource delete --ids

    #   # Test Azure Resource Deployment with pdnsz vnet-link
    # - uses: ./.github/actions/deploy-az-resource
    #   with:
    #     az_rg_n: ${{ env.RG_N }}
    #     template_path: examples/examples.bicep

      # Deploy Resource to ACR
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - run: |
        az bicep build --file main.bicep
        az bicep publish --file main.bicep --target br:${{ secrets.ACR_LOGIN_SERVER }}/bicep/modules/$ACR_MODULE_N:${{ github.sha }}
